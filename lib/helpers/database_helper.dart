import 'dart:io';
import '../services/database_service.dart';

class DatabaseHelper {
  static Future<bool> checkMySQLConnection() async {
    try {
      print('üîç Verificando conexi√≥n a MySQL...');
      
      // Intentar conectar al servicio de base de datos
      final dbService = DatabaseService.instance;
      await dbService.connection;
      
      print('‚úÖ Conexi√≥n a MySQL exitosa');
      return true;
    } catch (e) {
      print('‚ùå Error de conexi√≥n a MySQL: $e');
      return false;
    }
  }
  
  static Future<bool> initializeDatabase() async {
    try {
      print('üöÄ Inicializando base de datos...');
      
      final dbService = DatabaseService.instance;
      await dbService.initializeDatabase();
      
      print('‚úÖ Base de datos inicializada correctamente');
      return true;
    } catch (e) {
      print('‚ùå Error al inicializar base de datos: $e');
      return false;
    }
  }
  
  static Future<void> showSystemInfo() async {
    print('üì± === INFORMACI√ìN DEL SISTEMA ===');
    print('SO: ${Platform.operatingSystem}');
    print('Versi√≥n: ${Platform.operatingSystemVersion}');
    print('Arquitectura: ${Platform.localeName}');
    
    print('\nüóÑÔ∏è === CONFIGURACI√ìN DE BASE DE DATOS ===');
    print('Host: localhost');
    print('Puerto: 3306');
    print('Base de datos: suan_app');
    print('Usuario: root');
    
    final isConnected = await checkMySQLConnection();
    print('Estado de conexi√≥n: ${isConnected ? "Conectado ‚úÖ" : "Desconectado ‚ùå"}');
    
    if (isConnected) {
      print('\nüèóÔ∏è Intentando inicializar base de datos...');
      final isInitialized = await initializeDatabase();
      print('Base de datos: ${isInitialized ? "Inicializada ‚úÖ" : "Error de inicializaci√≥n ‚ùå"}');
    }
  }
  
  static Future<void> createExampleData() async {
    try {
      print('üìù Creando datos de ejemplo...');
      
      final dbService = DatabaseService.instance;
      final conn = await dbService.connection;
      
      // Verificar si ya existen datos
      final result = await conn.query('SELECT COUNT(*) as count FROM productos');
      final count = result.first['count'] as int;
      
      if (count > 0) {
        print('‚ö†Ô∏è Ya existen $count productos en la base de datos');
        return;
      }
      
      // Insertar datos de ejemplo solo si no existen
      await conn.query('''
        INSERT INTO productos (
          id_generado, tipo, familia, clase, modelo, marca, 
          presentacion, color, capacidad, unidad_venta, 
          rack, nivel, codigo_numerico, stock_actual
        ) VALUES 
        (
          'PRELEMP3NAAPSI16G1', 
          'ProductoTerminado', 
          'Electronica', 
          'Audio', 
          'MP3', 
          'Nano', 
          'Apple', 
          'Slim', 
          'Silver', 
          '16GB', 
          'Unidad', 
          'A1', 
          '1', 
          '1000', 
          50
        ),
        (
          'MATEALCOPLMO11001', 
          'MateriaPrima', 
          'Metal', 
          'Aluminio', 
          'Plancha', 
          'Molina', 
          'Industrial', 
          'Natural', 
          '1mm', 
          'Metro', 
          'B1', 
          '1', 
          '2000', 
          100
        )
      ''');
      
      print('‚úÖ Datos de ejemplo creados exitosamente');
    } catch (e) {
      print('‚ùå Error al crear datos de ejemplo: $e');
    }
  }
  
  static void printInstructions() {
    print('\nüìã === INSTRUCCIONES DE CONFIGURACI√ìN ===');
    print('1. Aseg√∫rate de que MySQL est√© instalado y ejecut√°ndose');
    print('2. Crea la base de datos ejecutando:');
    print('   mysql -u root -p -e "CREATE DATABASE suan_app;"');
    print('3. Opcionalmente, ejecuta el script de inicializaci√≥n:');
    print('   mysql -u root -p suan_app < database/init_database.sql');
    print('4. Reinicia la aplicaci√≥n');
    print('\nüîß === SOLUCI√ìN DE PROBLEMAS ===');
    print('- Verifica que MySQL est√© corriendo: sudo service mysql status');
    print('- Verifica credenciales en lib/services/database_service.dart');
    print('- Aseg√∫rate de que el puerto 3306 est√© disponible');
  }
}
